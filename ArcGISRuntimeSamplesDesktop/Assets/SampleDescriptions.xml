<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArcGISRuntimeSamplesDesktop</name>
    </assembly>
    <members>
        <member name="T:ArcGISRuntime.Samples.Desktop.AddKMLLayer">
            <summary>
            This sample demonstrates adding an online KML layer to the map
            </summary>
            <title>Add online KML Layer</title>
            <category>Layers</category>
            <subcategory>Kml Layers</subcategory>
            <summary>
            AddKMLLayer
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AddKMLLayer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.AddLocalKMLLayer">
            <summary>
            This sample demonstrates how to add a local KML layer to the map
            </summary>
            <title>Add local KML Layer</title>
            <category>Layers</category>
            <subcategory>Kml Layers</subcategory>
            <summary>
            AddLocalKMLLayer
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AddLocalKMLLayer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DragDropKMLFile">
            <summary>
            This sample demonstrates how you can add KML or KMZ file from your machine to the map using Drag/Drop. 
            </summary>
            <title>Drag and Drop</title>
            <category>Layers</category>
            <subcategory>Kml Layers</subcategory>
            <summary>
            DragDropKMLFile
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DragDropKMLFile.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.NetworklinkKML">
            <summary>
            This sample demonstrates binding kml to tree view and show Networklink features get updated
            </summary>
            <title>NetworkLink with TreeView</title>
            <category>Layers</category>
            <subcategory>Kml Layers</subcategory>
            <summary>
            NetworklinkKML
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.NetworklinkKML.#ctor">
            <summary>Construct KML NetworkLink with TreeView sample control</summary>       
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.NetworklinkKML.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerSample3d">
            <summary>
            Demonstrates adding an 2d ArcGIS dynamic map service to a Scene in XAML.
            </summary>
            <title>3D ArcGIS Dynamic Map Service Layer</title>
            <category>Scene</category>
            <subcategory>Layers</subcategory>
            <summary>
            ArcGISDynamicMapServiceLayerSample3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerSample3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ArcGISTiledMapServiceLayerSample3d">
            <summary>
            Demonstrates adding an 2d ArcGIS tiled map service to a Scene in XAML.
            </summary>
            <title>3D ArcGIS Tiled Map Service Layer</title>
            <category>Scene</category>
            <subcategory>Layers</subcategory>
            <summary>
            ArcGISTiledMapServiceLayerSample3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISTiledMapServiceLayerSample3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.CameraAnimationSample3d">
            <summary>
            Demonstrates how to animate camera to follow predefined viewpoints in 3d space.
            </summary>
            <title>3D Camera Animation</title>
            <category>Scene</category>
            <subcategory>Navigation</subcategory>
            <summary>
            CameraAnimationSample3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CameraAnimationSample3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ElevationExaggeration">
            <summary>
            Demonstrates elevation exaggeration in a scene.
            </summary>
            <title>3D Elevation Exaggeration</title>
            <category>Scene</category>
            <subcategory>Mapping</subcategory>
            <summary>
            ElevationExaggeration
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ElevationExaggeration.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ElevationSourceSample3d">
            <summary>
            Demonstrates adding an ElevationSource to a Scene in XAML.
            </summary>
            <title>3D Elevation Source</title>
            <category>Scene</category>
            <subcategory>Elevation</subcategory>
            <summary>
            ElevationSourceSample3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ElevationSourceSample3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ElevationModeSample">
            <summary>
            Demonstrates elevevation mode works with the graphics.
            </summary>
            <title>3D Graphics Elevation mode</title>
            <category>Scene</category>
            <subcategory>Elevation</subcategory>
            <summary>
            ElevationModeSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ElevationModeSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerFromLocalGeodatabase3d">
            <summary>
            This sample shows how to add a FeatureLayer from a local .geodatabase file to the scene.
            </summary>
            <title>3D Feature Layer from Local Geodatabase</title>
            <category>Scene</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            FeatureLayerFromLocalGeodatabase3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerFromLocalGeodatabase3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FollowTarget">
            <summary>
            Demonstrates how to follow a target in the SceneView
            </summary>
            <title>3D Follow Target</title>
            <category>Scene</category>
            <subcategory>Mapping</subcategory>
            <summary>
            FollowTarget
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FollowTarget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsExtrusion">
            <summary>
            Demonstrates how to use graphics extrusion to stretch a flat 2D shape vertically to create a 3D object.
            </summary>
            <title>3D Graphics Extrusion</title>
            <category>Scene</category>
            <subcategory>Graphics</subcategory>
            <summary>
            GraphicsExtrusion
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsExtrusion.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsOverlay3d">
            <summary>
            Demonstrates adding Point, Polyline, and Polygon graphics to a GraphicsOverlay
            </summary>
            <title>3D Graphics Overlay</title>
            <category>Scene</category>
            <subcategory>Layers</subcategory>
            <summary>
            GraphicsOverlay3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsOverlay3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.KMLLayerSample3D">
            <summary>
            This sample demonstrates adding a KML to a Scene in XAML.
            </summary>
            <title>3D KML Layer</title>
            <category>Scene</category>
            <subcategory>Layers</subcategory>
            <summary>
            KMLLayerSample3D
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.KMLLayerSample3D.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.OpenStreetMapLayerSample3d">
            <summary>
            Demonstrates adding an OpenStreetMap to a Scene in XAML.
            </summary>
            <title>3D Open Street map</title>
            <category>Scene</category>
            <subcategory>Layers</subcategory>
            <summary>
            OpenStreetMapLayerSample3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OpenStreetMapLayerSample3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerLocalSample">
            <summary>
            Demonstrates creating an ArcGISDynamicMapServiceLayer which references a LocalMapService.
            </summary>
            <title>ArcGIS Local Dynamic Map Service Layer</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <requiresLocalServer>true</requiresLocalServer>
            <summary>
            ArcGISDynamicMapServiceLayerLocalSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerLocalSample.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerLocalSample"/> class.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerLocalSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerSample">
            <summary>
            Demonstrates adding an ArcGIS dynamic map service layer to a Map in XAML. 
            </summary>
            <title>ArcGIS Dynamic Map Service Layer</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            ArcGISDynamicMapServiceLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISDynamicMapServiceLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ArcGISImageServiceLayerSample">
            <summary>
            Demonstrates adding an ArcGIS image service layer to a Map in XAML.
            </summary>
            <title>ArcGIS Image Service Layer</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            ArcGISImageServiceLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISImageServiceLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayers.DynamicLayerAddData">
            <summary>
            This sample demonstrates the dynamic layers capability to add Shapefiles and Raster datasets to the map. Single or multiple Shapefiles or Rasters can be selected in the open file dialog from within a folder. These files will be added to a local map service via the dynamic layers capability available in the API. This local map service is then used as the basis for an ArcGISDynamicMapServiceLayer which is added to the map. It would be possible to extend the sample to allows users to specify the symbol/renderer for any shapefiles added. Raster symbology is predetermined by the raster itself.
            </summary>
            <title>Dynamic Layer Add Data</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <requiresLocalServer>true</requiresLocalServer>
            <summary>
            DynamicLayerAddData
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayers.DynamicLayerAddData.#ctor">
            <summary>Construct DynamicLayerAddData user control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayers.DynamicLayerAddData.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayers.DynamicLayerLabeling">
            <summary>
            This sample demonstrates dynamic layer labeling.  Labels are configured in the LayerDrawingOptions of the dyanmic layer.  In this sample, labels are shown for major and minor US cities with different fonts and scale ranges.  Major city label info is configured in the XAML while minor city label info is added via the code-behind.
            </summary>
            <title>Dynamic Layer Labeling</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            DynamicLayerLabeling
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayers.DynamicLayerLabeling.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayers.DynamicLayerRendering">
            <summary>
            This sample demonstrates using the GenerateRendererTask to create a class breaks or unique value renderer on the server without having to retrieve all the data to the client. To use the sample, click either the Generate Range Values or Generate Unique Values button. This updates the renderer on the map.
            
            In the code-behind, a GenerateRendererTask is used to create a renderer, and the LayerDrawingOptions.Renderer is set to the generated renderer for use in the map's display.
            </summary>
            <title>Dynamic Layer Rendering</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            DynamicLayerRendering
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayers.DynamicLayerRendering.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayerReordering">
            <summary>
            This sample demonstrates changing the order of dynamic layers. Clicking the 'Change Layer Order' button uses the DynamicLayerInfoCollection to move the top layer to the bottom.
            </summary>
            <title>Dynamic Layer Reordering</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            DynamicLayerReordering
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerReordering.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayersInXAML">
            <summary>
            This sample demonstrates how to load dynamic map service layers in xaml. 
            </summary>
            <title>Dynamic Layers in XAML</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            DynamicLayersInXAML
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayersInXAML.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ImageServiceRasterFunctions">
            <summary>
            Demonstrates applying raster functions to an image service layer.
            </summary>
            <title>Image Service Raster Functions</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            ImageServiceRasterFunctions
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ImageServiceRasterFunctions.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Stretch">
            <summary>
            This sample demonstrates the Stretch raster function. 
            </summary>
            <title>Stretch</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            Stretch
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Stretch.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayers.WMSLayer">
            <summary>
            This sample demonstrates displaying an WMSLayer draped over an ArcGISTiledMapServiceLayer. The WMSLayer allows users to display Open GIS Consortium (OGC) WMS layers.
            </summary>
            <title>WMS Layer</title>
            <category>Layers</category>
            <subcategory>Dynamic Service Layers</subcategory>
            <summary>
            WMSLayer
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayers.WMSLayer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DrawAndEditGraphics">
            <summary>
            This sample demonstrates drawing and editing map graphics.
            </summary>
            <title>Draw and Edit Graphics</title>
            <category>Editing</category>
            <summary>
            DrawAndEditGraphics
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DrawAndEditGraphics.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayerEditAttribute">
            <summary>
            Demonstrates how to selectively import and update feature attributes in dynamic layer.
            </summary>
            <title>Dynamic Layer Edit Attribute</title>
            <category>Editing</category>
            <summary>
            DynamicLayerEditAttribute
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditAttribute.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            Identifies feature to highlight.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditAttribute.GetChoicesAsync">
            <summary>
            Returns choice list for attribute editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditAttribute.SetAttributeEditor(System.Int64,System.String)">
            <summary>        
            Prepares attribute editor for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditAttribute.ChoiceList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Enables attribute editing, submits attribute edit back to the server and refreshes dynamic layer.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditAttribute.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DynamicLayerEditGeometry">
            <summary>
            Demonstrates how to selectively import and update feature geometry in dynamic layer.
            </summary>
            <title>Dynamic Layer Edit Geometry</title>
            <category>Editing</category>
            <summary>
            DynamicLayerEditGeometry
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditGeometry.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            Identifies feature to highlight.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditGeometry.SetGeometryEditor(System.Int64)">
            <summary>
            Prepares geometry editor for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditGeometry.EditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Enables geometry editing, submits geometry edit back to the server and refreshes dynamic layer.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DynamicLayerEditGeometry.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.EditAttachment">
            <summary>
            Demonstrates how to update feature attachments in feature layer.
            </summary>
            <title>Edit Attachment</title>
            <category>Editing</category>
            <summary>
            EditAttachment
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            Selects feature for editing and query its attachments.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.SetAttachmentEditor(System.Int64,System.Collections.Generic.IReadOnlyList{Esri.ArcGISRuntime.Data.AttachmentInfoItem})">
            <summary>
            Prepares attachment editor for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.SaveEditsAsync">
            <summary>
            Submits attachment edits back to server.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.QueryAttachmentsAsync(System.Int64)">
            <summary>
            Query attachments of specified feature.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.GetFile">
            <summary>
            Prompts user to pick file from pictures folder.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.AddButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Adds new attachment to feature.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.OpenButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Opens the specified attachment.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.UpdateButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the specified attachment of feature.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.DeleteButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Deletes the specified attachment from feature.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditAttachment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.EditRelatedData">
            <summary>
            Demonstrates how to query and edit related records.
            </summary>
            <title>Edit Related Data</title>
            <category>Editing</category>
            <summary>
            EditRelatedData
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            Identifies graphic to highlight and query its related records.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.SetRelatedRecordEditor(System.Int64,System.String)">
            <summary>
            Prepares related record editor for add and query.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.SetAttributeEditor(Esri.ArcGISRuntime.Data.Feature)">
            <summary>
            Prepares attribute editor for update or delete of existing related record.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.GetRangeValues(System.Int32,System.Int32)">
            <summary>
            Gets exclusive values between minimum and maximum values.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.GetRelationshipAsync">
            <summary>
            Gets relationship information using service metadata.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.QueryRelatedRecordsAsync">
            <summary>
            Queries related records for specified feature ID.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.SaveEditsAsync">
            <summary>
            Submits related record edits back to server.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.GetRelatedTableAsync">
            <summary>
            Gets related table for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.RelatedRecords_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Displays current attribute values of related record.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.AddButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Adds a new related record to highlighted feature.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.EditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates attributes of related record.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.DeleteButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Deletes related record.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.EditRelatedData.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ExplicitSave">
            <summary>
            Demonstrates how to accumulated edits can be saved or canceled altogether.
            </summary>
            <title>Explicit Save</title>
            <category>Editing</category>
            <summary>
            ExplicitSave
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExplicitSave.AddButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Adds new feature on tap.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExplicitSave.SaveButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Saves accumulated edits.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExplicitSave.CancelButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Cancels accumulated edits.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExplicitSave.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SOEElevationData">
            <summary>
            This sample demonstrates how to use a custom Server Object Extension (SOE) hosted by ArcGIS for Server. The SOE operation used in this example returns a set of interpolated elevation values for a user defined grid. The grid extent and number of rows and columns are provided as inputs to the SOE.
            </summary>
            <title>SOE Elevation Data</title>
            <category>Extras</category>
            <summary>
            SOEElevationData
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SOEElevationData.#ctor">
            <summary>Construct SOE Elevation Data sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SOEElevationData.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerEditAttribute">
            <summary>
            Demonstrates how to update feature attributes in feature layer.
            </summary>
            <title>Feature Layer Edit Attribute</title>
            <category>Editing</category>
            <summary>
            FeatureLayerEditAttribute
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditAttribute.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            Selects feature for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditAttribute.GetChoices">
            <summary>
            Returns choice list for attribute editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditAttribute.SetAttributeEditor(Esri.ArcGISRuntime.Data.Feature)">
            <summary>        
            Prepares AttributeEditor for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditAttribute.ChoiceList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Enables attribute editing and submits attribute edit back to the server.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditAttribute.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerEditGeometry">
            <summary>
            Demonstrates how to update feature geometry in feature layer.
            </summary>
            <title>Feature Layer Edit Geometry</title>
            <category>Editing</category>
            <summary>
            FeatureLayerEditGeometry
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditGeometry.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            Selects feature for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditGeometry.SetGeometryEditor(Esri.ArcGISRuntime.Data.Feature)">
            <summary>
            Prepares GeometryEditor for editing.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditGeometry.EditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Enables geometry editing and submits geometry edit back to the server.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerEditGeometry.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MovePoints">
            <summary>
            Demonstrates one method of moving graphic points on the map.
            </summary>
            <title>Move Points</title>
            <category>Editing</category>
            <summary>
            MovePoints
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MovePoints.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing">
            <summary>
            Demonstrates how editing of features can be restricted by ownership-based access defined in the service.
            </summary>
            <title>Ownership-based Editing</title>
            <category>Editing</category>
            <summary>
            OwnershipBasedEditing
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.GetCredentialAsync(Esri.ArcGISRuntime.Security.CredentialRequestInfo)">
            <summary>
            Forwards credential request info using Dispatcher to enable access to UI elements.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.GetCredentialUIAsync(Esri.ArcGISRuntime.Security.CredentialRequestInfo)">
            <summary>
            Initializes UI and login task with credential request info.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.SignInButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Attempts to generate credential for service to set login task result.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.SignOut">
            <summary>
            Removes credential used to access the service and adds a new instance of layer to trigger another challenge.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.SignOutButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Signs out from current login so sample can trigger credential challenge.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.MyMapView_LayerLoaded(System.Object,Esri.ArcGISRuntime.Controls.LayerLoadedEventArgs)">
            <summary>
            Updates login information based on credential.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.MyMapView_LayerUnloaded(System.Object,Esri.ArcGISRuntime.Controls.LayerUnloadedEventArgs)">
            <summary>
            Signs out from current login so switching samples can trigger credential challenge.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            Selects feature and checks whether update or delete is allowed.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.AddButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Adds a new turtle feature owned by current user.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OwnershipBasedEditing.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerFromLocalGeodatabase">
            <summary>
            This sample shows how to add a FeatureLayer from a local .geodatabase file to the map. A .geodatabase file may be created using the 'Create Runtime Content' tool in ArcMap.
            </summary>
            <title>Feature Layer from Local Geodatabase</title>
            <category>Layers</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            FeatureLayerFromLocalGeodatabase
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerFromLocalGeodatabase.#ctor">
            <summary>Construct FeatureLayerFromLocalGeodatabase sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerFromLocalGeodatabase.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerFromService">
            <summary>
            This sample demonstrates the Feature Layer. Feature layers allow you to easily plot layers from a feature service on a map. As the sample XAML shows, this simply requires declaring a FeatureLayer element in the Map's layers collection and specifying the URL of the its ServiceFeatureTable attribute to the feature service layer.
            </summary>
            <title>Feature Layer From Service</title>
            <category>Layers</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            FeatureLayerFromService
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerFromService.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerFromShapefile">
            <summary>
            This sample shows how to add a FeatureLayer from a local shapefile to the map.
            </summary>
            <title>Feature Layer from Shapefile</title>
            <category>Layers</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            FeatureLayerFromShapefile
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerFromShapefile.#ctor">
            <summary>Construct FeatureLayerFromLocalGeodatabase sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerFromShapefile.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerHitTesting">
            <summary>
            This sample demonstrates feature layer hit testing. When the user clicks on the map, the application uses FeatureLayer.HitTest to retrieve the feature at the mouse point. The HitTest method returns the row ID of the first feature found at the given point. This sample then uses the FeatureTable.QueryAsync method to retrieve a Feature for the HitTested row ID and displays its attributes in the UI.
            </summary>
            <title>Hit Testing</title>
            <category>Layers</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            FeatureLayerHitTesting
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerHitTesting.#ctor">
            <summary>Construct FeatureLayerHitTesting sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerHitTesting.MyMapView_MapViewTapped(System.Object,Esri.ArcGISRuntime.Controls.MapViewInputEventArgs)">
            <summary>
            On each mouse click:
            - HitTest the feature layer
            - Query the feature table for the returned row
            - Set the result feature for the UI
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerHitTesting.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="E:ArcGISRuntime.Samples.Desktop.FeatureLayerHitTesting.PropertyChanged">
            <summary>PropertyChanged event for INotifyPropertyChanged</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.FeatureLayerHitTesting.ResultFeature">
            <summary>HitTest result feature</summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerMapTips">
            <summary>
            This sample shows how to display a map tip for a feature layer.  In this example, the MouseMove event of the MapView is handled with code that performs a FeatureLayer HitTest / Query combination which returns a single feature for display in the mapTip element defined in the XAML.
            </summary>
            <title>Map Tips</title>
            <category>Layers</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            FeatureLayerMapTips
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerMapTips.#ctor">
            <summary>Construct Map Tips sample</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerMapTips.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FeatureLayerSelection">
            <summary>
            This sample demonstrates how to select and unselect features in a feature layer using the SelectFeatures, UnSelectFeatures and ClearSelecteion methods of the FeatureLayer class.  The sample uses the MapView.RequestShapeAsync method to allow the user to draw a selection rectangle intersecting features that he would like to manage.  Once the selection rectangle is returned, a SpatialQueryFilter is used to spatially select features in the feature layer using FeatureLayer.QueryAsync.  When the features are identified the selected features list of the feature layer is managed using the FeatureLayer selection management methods.
            </summary>
            <title>Feature Layer Selection</title>
            <category>Layers</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            FeatureLayerSelection
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerSelection.#ctor">
            <summary>Construct Feature Layer Selection sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FeatureLayerSelection.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.QueryFilterSample">
            <summary>
            This sample demonstrates how to apply a filter to a feature layer using the FeatureLayer.Where property and to further filter the result set using a QueryFilter. The FeatureLayer.Where property allows you to retrieve a subset of records from a feature service that match an attribute query.  The ArcGISFeatureTable.QueryAsync method takes a QueryFilter object and uses it to filter the current feature set.  In this example, the features returned by the query are converted to graphics and displayed in a GraphicsOverlay on the map.
            </summary>
            <title>Query Filter</title>
            <category>Layers</category>
            <subcategory>Feature Layers</subcategory>
            <summary>
            QueryFilterSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.QueryFilterSample.#ctor">
            <summary>Construct QueryFilterSample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.QueryFilterSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FindPlace">
            <summary>
            Demonstrates how to use the FindAsync method of an OnlineLocatorTask object to find places by name.
            </summary>
            <title>Find a Place</title>
            <category>Tasks</category>
            <subcategory>Geocoding</subcategory>
            <summary>
            FindPlace
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FindPlace.#ctor">
            <summary>Construct find place sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FindPlace.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GeocodeAddress">
            <summary>
            Demonstrates how to geocode an address using the OnlineLocatorTask.
            </summary>
            <title>Geocode an Address</title>
            <category>Tasks</category>
            <subcategory>Geocoding</subcategory>
            <summary>
            GeocodeAddress
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeocodeAddress.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ReverseGeocode">
            <summary>
            Demonstrates using the OnlineLocatorTask.ReverseGeocodeAsync method to get address information from a location on the map.
            </summary>
            <title>Reverse Geocode</title>
            <category>Tasks</category>
            <subcategory>Geocoding</subcategory>
            <summary>
            ReverseGeocode
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ReverseGeocode.#ctor">
            <summary>Construct reverse geocode sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ReverseGeocode.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.AreaSample">
            <summary>
            Demonstrates how to calculate the area and perimeter of a polygon using the GeometryEngine.
            </summary>
            <title>Area</title>
            <category>Geometry</category>
            <summary>
            AreaSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AreaSample.#ctor">
            <summary>Construct Area sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AreaSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Boundary">
            <summary>
            Demonstrates the GeometryEngine.Boundary method to calculate the geometric boundary of a given geometry. Here, boundaries are calculated for a multi-part polygon (returning a boundary polyline) and a multi-part polyline (returning multiple points).
            </summary>
            <title>Boundary</title>
            <category>Geometry</category>
            <summary>
            Boundary
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Boundary.#ctor">
            <summary>Construct Boundary sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Boundary.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.BufferSample">
            <summary>
            This sample demonstrates use of the GeometryEngine to calculate a buffer. To use the sample, click a point on the map. The click point and a buffer of 5 miles around the point will be shown.
            </summary>
            <title>Buffer</title>
            <category>Geometry</category>
            <summary>
            BufferSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.BufferSample.#ctor">
            <summary>Construct Buffer sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.BufferSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ClipGeometry">
            <summary>
            Example of using the GeometryEngine.Clip method to clip feature geometries with a given envelope. To use this sample, the user draws a clipping rectangle over the feature polygons and the system then clips the intersecting feature geometries and displays the resulting polygons in a graphics layer on the map.
            </summary>
            <title>Clip</title>
            <category>Geometry</category>
            <summary>
            ClipGeometry
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClipGeometry.#ctor">
            <summary>Construct Clip Geometry sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClipGeometry.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ConvexHull">
            <summary>
            Demonstrates use of the GeometryEngine.ConvexHull method to create a convex hull polygon for three or more points.  A convex hull is the smallest polygon that completely encases a set (i.e. locus) of points. To use the sample, add three or more points on the map and click the Generate Convex Hull button. A polygon containing all the points entered will be returned.
            </summary>
            <title>Convex Hull</title>
            <category>Geometry</category>
            <summary>
            ConvexHull
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ConvexHull.#ctor">
            <summary>Construct Convex Hull sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ConvexHull.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.CreatePoints">
            <summary>
            Demonstrates how to create point geometries, attach them to graphics and display them on the map. MapPoint geometry objects are used to store geographic points.
            </summary>
            <title>Create Points</title>
            <category>Geometry</category>
            <summary>
            CreatePoints
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreatePoints.#ctor">
            <summary>Construct Create Points sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreatePoints.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.CreatePolygons">
            <summary>
            Demonstrates how to create polygon geometries, attach them to graphics and display them on the map. Polygon geometry objects are used to store geographic polygons.
            </summary>
            <title>Create Polygons</title>
            <category>Geometry</category>
            <summary>
            CreatePolygons
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreatePolygons.#ctor">
            <summary>Construct Create Polygons sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreatePolygons.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.CreatePolylines">
            <summary>
            Demonstrates how to create polyline geometries, attach them to graphics and display them on the map. Polyline geometry objects are used to store geographic lines.
            </summary>
            <title>Create Polylines</title>
            <category>Geometry</category>
            <summary>
            CreatePolylines
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreatePolylines.#ctor">
            <summary>Construct Create Polylines sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreatePolylines.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.CutGeometry">
            <summary>
            Example of using the GeometryEngine.Cut method to cut feature geometries with a given polyline. To use this sample, the user draws a cut polyline intersecting the feature polygons and the system then cuts the intersecting feature geometries and displays the resulting polygons in a graphics overlay on the map.
            </summary>
            <title>Cut</title>
            <category>Geometry</category>
            <summary>
            CutGeometry
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CutGeometry.#ctor">
            <summary>Construct Cut Geometry sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CutGeometry.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Densify">
            <summary>
            This sample demonstrates using GeometryEngine.Densify to take an input polygon and return a densified polygon. Original vertices to create the original polygon are shown in red. The returned polygon shows the additional densified vertices in green. To use the sample, click the 'Densify Polygon' button and create a polygon on the map. Double-click to end the polygon sketch and densify the polygon and see the original and densified vertices.
            </summary>
            <title>Densify</title>
            <category>Geometry</category>
            <summary>
            Densify
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Densify.#ctor">
            <summary>Construct Densify sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Densify.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Difference">
            <summary>
            Example of using the GeometryEngine.Difference or GeometryEngine.SymmetricDifference methods to calculate the geometric difference between feature geometries and a user defined geometry. To use this sample, the user draws a polygon over the feature polygons and the system then calculates the difference between the intersecting feature geometries and displays the resulting polygons in a graphics layer on the map.
            </summary>
            <title>Difference</title>
            <category>Geometry</category>
            <summary>
            Difference
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Difference.#ctor">
            <summary>Construct Difference sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Difference.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DistanceFromGeometry">
            <summary>
            This sample demonstrates using the GeometryEngine.DistanceFromGeometry method to calculate the linear distance of the shortest length between two geometries. To use the sample, click on the 'Calculate Distance' button and then add a polyline and a point to the map. After the point is entered the shortest distance between them is displayed.
            </summary>
            <title>Distance From Geometry</title>
            <category>Geometry</category>
            <summary>
            DistanceFromGeometry
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DistanceFromGeometry.#ctor">
            <summary>Construct Distance From Geometry sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DistanceFromGeometry.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Generalize">
            <summary>
            This sample demonstrates using the GeometryEngine.Generalize method to take a polyline with numerous vertices and return a generalized polyline with less vertices. Additionally a SliderControl appears after the GeometryService completes that allows adjusting the maximum offset value of the generalized polyline.
            </summary>
            <title>Generalize</title>
            <category>Geometry</category>
            <summary>
            Generalize
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Generalize.#ctor">
            <summary>Construct Generalize sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Generalize.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GeodesicBuffer">
            <summary>
            This sample demonstrates use of the GeometryEngine to calculate a geodesic buffer. To use the sample, click a point on the map. The click point and a geodesic buffer of 500 miles around the point will be shown.
            </summary>
            <title>Geodesic Buffer</title>
            <category>Geometry</category>
            <summary>
            GeodesicBuffer
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicBuffer.#ctor">
            <summary>Construct Geodesic Buffer sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicBuffer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GeodesicDensify">
            <summary>
            This sample demonstrates using GeometryEngine.GeodesicDensify to take an input shape and return a geodesic densified shape. Original vertices to create the original polygon or polyline are shown in red. The returned polygon shows the additional densified vertices in green. To use the sample, click the 'Densify' button and create a shape on the map. Double-click to end the polygon sketch and densify the shape and see the original and densified vertices.
            </summary>
            <title>Geodesic Densify</title>
            <category>Geometry</category>
            <summary>
            GeodesicDensify
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicDensify.#ctor">
            <summary>Construct Densify sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicDensify.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GeodesicEllipse">
            <summary>
            This sample demonstrates use of the GeometryEngine.GeodesicEllipse to calculate a geodesic ellipse. Also shows is how to calculate a geodesic sector using GeometryEngine.GeodesicSector to create a geodesic sector emanating from point. To use the sample, fill in the ellipse properties and click the 'Geodesic Ellipse' button, then click a center point on the map. The click point and a geodesic ellipse and sector centered at the point will be displayed.
            </summary>
            <title>Geodesic Ellipse</title>
            <category>Geometry</category>
            <summary>
            GeodesicEllipse
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicEllipse.#ctor">
            <summary>Construct Geodesic Ellipse sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicEllipse.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GeodesicMove">
            <summary>
            This sample demonstrates use of the GeometryEngine.GeodesicMove method to move a geometry be a specified distance. To use the sample, first digitize a polygon on the map. Then set the move distance and angle properties and click the 'Geodesic Move' button. The original polygon and the new moved polygon will be displayed.
            </summary>
            <title>Geodesic Move</title>
            <category>Geometry</category>
            <summary>
            GeodesicMove
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicMove.#ctor">
            <summary>Construct Geodesic Move sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeodesicMove.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Intersection">
            <summary>
            Example of using the GeometryEngine.Intersection method to intersect feature geometries with a given polygon. To use this sample, the user draws a polygon over the feature polygons and the system then retrieves the intersection of the feature geometries and the new polygon. Resulting polygons are shown in a graphics layer on the map.
            </summary>
            <title>Intersection</title>
            <category>Geometry</category>
            <summary>
            Intersection
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Intersection.#ctor">
            <summary>Construct Intersection sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Intersection.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.LabelPoint">
            <summary>
            This sample demonstrates use of the GeometryEngine.LabelPoint method to calculate the location of label points.
            </summary>
            <title>Label Point</title>
            <category>Geometry</category>
            <summary>
            LabelPoint
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LabelPoint.#ctor">
            <summary>Construct Label Point sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LabelPoint.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.NearestCoordinateInGeometry">
            <summary>
            Demonstrates how to find the nearest polygon point or vertex of a geometry using the NearestCoordinateInGeometry or NearestVertexInGeometry methods of the GeometryEngine class. Here, the user selects a target polygon graphic and then clicks points on the map to show the nearest point or vertex on the target polygon.
            </summary>
            <title>Nearest Coordinate in Geometry</title>
            <category>Geometry</category>
            <summary>
            NearestCoordinateInGeometry
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.NearestCoordinateInGeometry.#ctor">
            <summary>Construct Nearest Coordinate sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.NearestCoordinateInGeometry.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Offset">
            <summary>
            Demonstrates how to create an offset geometry using the Offset method of the GeometryEngine class.
            </summary>
            <title>Offset</title>
            <category>Geometry</category>
            <summary>
            Offset
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Offset.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ProjectCoordinate">
            <summary>
            Sample shows how to project a coordinate from the current map projection (in this case Web Mercator) to a different projection.
            </summary>
            <title>Project</title>
            <category>Geometry</category>
            <summary>
            ProjectCoordinate
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ProjectCoordinate.#ctor">
            <summary>Construct Project sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ProjectCoordinate.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Relate">
            <summary>
            Sample shows how to use the GeometryEngine.Relate method to test the spatial relationship of two geometries.
            </summary>
            <title>Relate</title>
            <category>Geometry</category>
            <summary>
            Relate
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Relate.#ctor">
            <summary>Construct Relationship sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Relate.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Relationship">
            <summary>
            Sample shows how to test the spatial relationship of two geometries.
            </summary>
            <title>Relationship</title>
            <category>Geometry</category>
            <summary>
            Relationship
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Relationship.#ctor">
            <summary>Construct Relationship sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Relationship.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Simplify">
            <summary>
            This sample demonstrates use of the GeometryEngine.Simplify method to simplify a polygon, and demonstrates the importance of simplification. To use the sample, click the Query with Original Polygon button. Observe the results include parcels that are not wholly within the red polygon. Then click the Simplify Polygon, then Query button. Observe the resulting parcels are now wholly within the red polygon.
            </summary>
            <title>Simplify</title>
            <category>Geometry</category>
            <summary>
            Simplify
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Simplify.#ctor">
            <summary>Construct Geodesic Move sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Simplify.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.UnionGeometry">
            <summary>
            Example of using the GeometryEngine.Union method to calculate the geometric union of feature geometries and a given polygon. To use this sample, the user draws a polygon over the feature polygons and the system then retrieves the union of the feature geometries and the new polygon. Resulting polygons are shown in a graphics overlay on the map.
            </summary>
            <title>Union</title>
            <category>Geometry</category>
            <summary>
            UnionGeometry
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.UnionGeometry.#ctor">
            <summary>Construct Union sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.UnionGeometry.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ClipFeatures">
            <summary>
            Demonstrates use of the Geoprocessor to call an asynchronous Clip Features geoprocessing service.
            </summary>
            <title>Clip Features</title>
            <category>Tasks</category>
            <subcategory>Geoprocessing</subcategory>
            <summary>
            ClipFeatures
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClipFeatures.#ctor">
            <summary>Construct Clip Features sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClipFeatures.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.DriveTimes">
            <summary>
            This sample demonstrates use of the Geoprocessor to call a DriveTimes geoprocessing service. To use the sample, click a point in the map. Drive time polygons of 1, 2, and 3 minutes will be calculated and displayed on the map.
            </summary>
            <title>Drive Times</title>
            <category>Tasks</category>
            <subcategory>Geoprocessing</subcategory>
            <summary>
            DriveTimes
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DriveTimes.#ctor">
            <summary>Constructs Drive Times sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.DriveTimes.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ExtractData">
            <summary>
            This sample shows how to work with an asynchronous Extract Data geoprocessing service. The Extract Data Task lets users specify an area of interest then download a zip file that contains data for that area from one or more layers.
            </summary>
            <title>Extract Data</title>
            <category>Tasks</category>
            <subcategory>Geoprocessing</subcategory>
            <summary>
            ExtractData
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExtractData.#ctor">
            <summary>Construct Extract Data sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExtractData.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MessageInABottle">
            <summary>
            This sample demonstrates use of the Geoprocessor to call a MessageInABottle geoprocessing service. To use the sample, specify the number of days and click a point in the ocean. The path of a bottle dropped at the click point over the specified number of days will be drawn on the map.
            </summary>
            <title>Message in a Bottle</title>
            <category>Tasks</category>
            <subcategory>Geoprocessing</subcategory>
            <summary>
            MessageInABottle
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MessageInABottle.#ctor">
            <summary>Construct Message In A Bottle sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MessageInABottle.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.PopulationForArea">
            <summary>
            This sample uses a geoprocessing task to estimate the number of people within a polygon you draw on the map. Click 'Summarize Population', then freehand a line on the map surrounding an area to analyze. When you release the mouse button, the polygon will auto-complete and you'll see how many people are estimated to live within the polygon boundaries.
            </summary>
            <title>Population for an Area</title>
            <category>Tasks</category>
            <subcategory>Geoprocessing</subcategory>
            <summary>
            PopulationForArea
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.PopulationForArea.#ctor">
            <summary>Construct Population for Area sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.PopulationForArea.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Viewshed">
            <summary>
            This sample demonstrates use of the Geoprocessor to call a Viewshed geoprocessing service.
            </summary>
            <title>Viewshed</title>
            <category>Tasks</category>
            <subcategory>Geoprocessing</subcategory>
            <summary>
            Viewshed
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Viewshed.#ctor">
            <summary>Construct Viewshed sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Viewshed.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.AddInteractively">
            <summary>
            Example of how to add Graphics to a GraphicsOverlay by drawing shapes on the map.  The Editor.RequestShapeAsync method is used to manage map drawing and geometry creation.  Symbols for the graphics are defined in XAML.
            </summary>
            <title>Add Graphics Interactively</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            AddInteractively
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AddInteractively.#ctor">
            <summary>Construct Add Graphics Interactively sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AddInteractively.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="E:ArcGISRuntime.Samples.Desktop.AddInteractively.PropertyChanged">
            <summary>INotifyPropertyChanged notification</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.AddInteractively.InDrawMode">
            <summary>Is In Drawing Mode</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.AddInteractively.CurrentDrawShape">
            <summary>Currently selected shape type</summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.CsvLayerSample">
            <summary>
            Demonstrates defining a CsvLayer in XAML and setting the serviceUri property to a .csv file hosted online by the United States Geological Survey (USGS).
            </summary>
            <title>CSV Layer</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            CsvLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CsvLayerSample.#ctor">
            <summary>Initializes a new instance of the <see cref="T:ArcGISRuntime.Samples.Desktop.CsvLayerSample"/> class.</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CsvLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GeoRssLayerSample">
            <summary>
            Creates a GeoRssLayer based on the United States Geological Survey earthquake feed and assigned a SimpleRenderer.
            </summary>
            <title>GeoRSS Layer</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            GeoRssLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeoRssLayerSample.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArcGISRuntime.Samples.Desktop.GeoRssLayerSample"/> class.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GeoRssLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsHitTesting">
            <summary>
            This sample shows how to hit test a graphics layer using the GraphicsOverlay.HitTestAsync method. Here, the user may sketch a point on the map to initiate the hit testing process - the results of the hit test are then displayed in the UI.
            </summary>
            <title>Hit Testing</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            GraphicsHitTesting
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsHitTesting.#ctor">
            <summary>Construct Graphics Hit Testing sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsHitTesting.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsLayerRenderingMode">
            <summary>
            This sample demonstrates the use of the GraphicsLayer.RenderingMode property to control how a GraphicsOverlay draws its graphics. Zooming and Panning the map in each of the rendering modes will show the differences between them. Rendering mode differences will be more pronounced with higher numbers of graphics in the graphic layer.
            </summary>
            <title>Rendering Mode</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            GraphicsLayerRenderingMode
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsLayerRenderingMode.#ctor">
            <summary>Construct Rendering Mode sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsLayerRenderingMode.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsLayerSample">
            <summary>
            This sample demonstrates how to add a GraphicsOverlay with Graphics and Symbols to the map in XAML.  The sample also shows how to add Polyline graphics to a GraphicsOverlay from the code-behind.
            </summary>
            <title>Graphics Layer</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            GraphicsLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsLayerSample.#ctor">
            <summary>Construct graphics layer sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsLayerSelection">
            <summary>
            This sample demonstrates GraphicLayer selection management. Graphics are set in a selected or unselected state by using the Graphic.IsSelected property. Here, the user selects or unselects graphics by clicking on the graphic.
            </summary>
            <title>Selection</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            GraphicsLayerSelection
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsLayerSelection.#ctor">
            <summary>Construct Graphics Layer Selection sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsLayerSelection.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsMapTips">
            <summary>
            This sample demonstrates how to position map tips on graphics in a graphics layer. In this example, a random set of graphics is added to a graphics layer on the map and the MapView.MouseMove event is handled to hit test the graphics layer and position the map tip.
            </summary>
            <title>Map Tips</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            GraphicsMapTips
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsMapTips.#ctor">
            <summary>Construct Graphics Map Tips sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsMapTips.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GraphicsSourceSample">
            <summary>
            This sample demonstrates the use of the GraphicsLayer.GraphicsSouce property. Here, three separate graphics source lists are initially created with random graphics. A button is used to switch the GraphicsSource property of the GraphicsLayer between the sources.
            </summary>
            <title>Graphics Source</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            GraphicsSourceSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsSourceSample.#ctor">
            <summary>Construct Graphics Source sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GraphicsSourceSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SmoothGraphicAnimation">
            <summary>
            Animates a graphic smoothly between two user defined locations by moving MapPoint at regular intervals as defined by a DispatcherTimer. 
            The distance the point is moved each time is calculated by a quintic easing function.
            </summary>
            <title>Smooth Graphic Animation</title>
            <category>Layers</category>
            <subcategory>Graphics Layers</subcategory>
            <summary>
            SmoothGraphicAnimation
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SmoothGraphicAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArcGISRuntime.Samples.Desktop.SmoothGraphicAnimation"/> class.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SmoothGraphicAnimation.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ComputeClassStatistics">
            <summary>
            Demonstrates how to compute class statistics for an image layer and display the results with the Maximum Likelihood Classification renderer rule.
            </summary>
            <title>Compute Class Statistics</title>
            <category>Tasks</category>
            <subcategory>Imagery</subcategory>
            <summary>
            ComputeClassStatistics
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ComputeClassStatistics.#ctor">
            <summary>Construct compute class statistics sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ComputeClassStatistics.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GetSamples">
            <summary>
            This sample demonstrates using an QueryTask to Query an ArcGISImageServiceLayer to find the outlines of image tiles and display them in a GraphicOverlay. MapOverlay attribute information is displayed for selected tile graphics when they are clicked on the map.
            </summary>
            <title>Get Samples</title>
            <category>Tasks</category>
            <subcategory>Imagery</subcategory>
            <summary>
            GetSamples
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GetSamples.#ctor">
            <summary>Construct Get Image Samples sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GetSamples.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Mensuration">
            <summary>
            This sample demonstrates the use of the mensuration (measure) operations on an ArcGIS image service. Choose a measure operation and units to be returned in the results.
            </summary>
            <title>Mensuration</title>
            <category>Tasks</category>
            <subcategory>Imagery</subcategory>
            <summary>
            Mensuration
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Mensuration.#ctor">
            <summary>Construct Mensuration sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Mensuration.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GroupLayers">
            <summary>
            This sample demonstrates the use of GroupLayers to contain related layers in a map.  In this sample there are two GroupLayers, one containing two basemap layers and the other containing four dynamic or feature layers.  The legend shows how Layer properties (like IsVisible and Opacity) of layers within a GroupLayer can be managed either individually or as a part of the group.
            </summary>
            <title>Group Layers</title>
            <category>Mapping</category>
            <summary>
            GroupLayers
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GroupLayers.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.InteractionOptionsSample">
            <summary>
            This sample shows how to change interaction settings that controls the MapView.
            </summary>
            <title>Interaction Options</title>
            <category>Mapping</category>
            <summary>
            InteractionOptionsSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.InteractionOptionsSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.LayerList">
            <summary>
            Shows how to access layers in the map.
            </summary>
            <title>Layer List</title>
            <category>Mapping</category>
            <summary>
            LayerList
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LayerList.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.LayersInitialized">
            <summary>
            Demonstrates implementing logic which is dependent on the layer collection being initialized.
            </summary>
            <category>Layers</category>
            <summary>
            LayersInitialized
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LayersInitialized.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArcGISRuntime.Samples.Desktop.LayersInitialized"/> class.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LayersInitialized.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="E:ArcGISRuntime.Samples.Desktop.LayersInitialized.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.LocationDisplay">
            <summary>
            This sample demonstrates the location display using the MapView.LocationDisplay attribute to show your location on a map.  The user may change Location Provider settings and view basic details about the current location.
            </summary>
            <title>Location Display</title>
            <category>Mapping</category>
            <summary>
            LocationDisplay
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LocationDisplay.#ctor">
            <summary>Construct Location Display sample user control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LocationDisplay.resetDisplay_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>Reset the MapView by removing any map rotation and centering on the existing Location. </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LocationDisplay.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.RandomProvider">
            <summary>Location provider that provides pseudo random location updates</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.RandomProvider.#ctor">
            <summary>Construct random provider</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.RandomProvider.StartAsync">
            <summary>Starts the location provider</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.RandomProvider.StopAsync">
            <summary>Stops the location provider</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.RandomProvider.StartLatitude">
            <summary>Starting Latitude</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.RandomProvider.StartLongitude">
            <summary>Starting Longitude</summary>
        </member>
        <member name="E:ArcGISRuntime.Samples.Desktop.RandomProvider.LocationChanged">
            <summary>LocationChanged event (from ILocationProvider)</summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MapGrid">
            <summary>
            This sample shows how to enable a map grid using the MapView.MapGrid property.  The user is allowed to switch between the standard grid types (Latitude / Longitude, MGRS, UTM, and USNG) by using a combobox in the upper right corner of the screen.
            </summary>
            <title>Map Grid</title>
            <category>Mapping</category>
            <summary>
            MapGrid
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MapGrid.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MapOverlays">
            <summary>
            This sample demonstrates how to display map overlay elements in the MapView. Here, three map overlays are included in the MapView XAML. The first is an overlay that maintains a constant X,Y anchor point on the map. The second overlay is always anchored to the center point of the current extent. The last overlay changes its anchor point when the user clicks the map.
            </summary>
            <title>Map Overlays</title>
            <category>Mapping</category>
            <summary>
            MapOverlays
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MapOverlays.#ctor">
            <summary>Construct Map Overlays sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MapOverlays.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MapRotation">
            <summary>
            This sample shows how to rotate a map using the MapView.Rotation property.  The slider control in the top right corner of the map controls the rotation angle of the map view.
            </summary>
            <title>Map Rotation</title>
            <category>Mapping</category>
            <summary>
            MapRotation
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MapRotation.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.NavigateFromViewModel">
            <summary>
            This sample shows how to perform view operations from a view model
            by using a controller that's bound to the map.
            The ViewModel owns the controller and doesn't know about the MapView it is
            being bound to, but can perform operations on the controller.
            </summary>
            <title>Navigate from ViewModel</title>
            <category>Mapping</category>
            <summary>
            NavigateFromViewModel
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.NavigateFromViewModel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.NavigateFromViewModel_VM">
            <summary>
            ViewModel for the NavigateFromViewModel page
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MapViewController">
            <summary>
            This is the controller object. We use this bind to the map with an attached property.
            It manages performing view operations without exposing the view back to the viewmodel.
            Instead it exposes a SetViewCommand for command binding and a SetViewAsync method
            for performing view operations directly from the owner of the MapViewController instance (ie the ViewModel).
            </summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.MapViewController.SetViewCommand">
            <summary>
            Calls SetView on the Envelope provided in the <see cref="!:System.Windows.Input.ICommand.CommandParameter"/>
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MapViewController.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:ArcGISRuntime.Samples.Desktop.MapViewController.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MapViewController.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MapViewController.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MapViewController.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.MapViewController.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.MapViewController.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.OverviewMap">
            <summary>
            This sample demonstrates displaying an overview map to indicate the extent of the parent map.
            </summary>
            <title>Overview Map</title>
            <category>Mapping</category>
            <summary>
            OverviewMap
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OverviewMap.#ctor">
            <summary>Construct Overview Map sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OverviewMap.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SetInitialCenterAndScale">
            <summary>
            Shows how to set the initial center and scale of the map (Map.InitialViewpoint).
            </summary>
            <title>Set Initial Center and Scale</title>
            <category>Mapping</category>
            <summary>
            SetInitialCenterAndScale
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SetInitialCenterAndScale.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SetInitialMapExtent">
            <summary>
            Shows how to set the initial extent of the map (Map.InitialViewpoint).
            </summary>
            <title>Set Initial Map Extent</title>
            <category>Mapping</category>
            <summary>
            SetInitialMapExtent
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SetInitialMapExtent.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SetSpatialReference">
            <summary>
            Demonstrates setting the extent and spatial reference of a map via the Map.InitialExtent property.
            </summary>
            <title>Set Spatial Reference</title>
            <category>Mapping</category>
            <summary>
            SetSpatialReference
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SetSpatialReference.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ShowMapExtent">
            <summary>
            This sample includes a Map and a ArcGISTiledMapServiceLayer and demonstrates how to handle the ExtentChanged event on the MapView.  The extent parameters of the map are displayed in a textblock as they change at runtime.  Since the Map is in wrap-around mode, absolute values represent the map extent on an infinite continuous grid where values on the X axis increase or decrease as you pan.  Normalized values represent the map extent in the real-world and take the dateline (or current central meridian) into account.
            </summary>
            <title>Show Map Extent</title>
            <category>Mapping</category>
            <summary>
            ShowMapExtent
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ShowMapExtent.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ShowMapScale">
            <summary>
            This sample demonstrates the map scale changing when you zoom in and out. The XAML textblock is bound to the MapView.Scale property to display the current map scale at the bottom of the display.
            </summary>
            <title>Show Map Scale</title>
            <category>Mapping</category>
            <summary>
            ShowMapScale
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ShowMapScale.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ShowMouseCoordinates">
            <summary>
            This sample includes a Map and a single ArcGIS Server layer. MouseMove events on the Map are handled to return the mouse cursor location over the map. The location is displayed in pixels and map units.
            </summary>
            <title>Show Mouse Coordinates</title>
            <category>Mapping</category>
            <summary>
            ShowMouseCoordinates
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ShowMouseCoordinates.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SwipeMap">
            <summary>
            Shows how to swipe one map over another.
            </summary>
            <title>Swipe</title>
            <category>Mapping</category>
            <summary>
            SwipeMap
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SwipeMap.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SwitchBasemaps">
            <summary>
            Demonstrates changing the basemap layer in a map by switching  between ArcGIS tiled map services layers hosted by ArcGIS Online.
            </summary>
            <title>Switch Basemaps</title>
            <category>Mapping</category>
            <summary>
            SwitchBasemaps
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SwitchBasemaps.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Routing">
            <summary>
            Demonstrates simple point to point routing between two input locations with either OnlineLocatorTask or LocalLocatorTask.
            </summary>
            <title>Routing</title>
            <category>Tasks</category>
            <subcategory>Network Analyst</subcategory>
            <summary>
            Routing
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Routing.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.RoutingWithBarriers">
            <summary>
            Shows routing and re-routing between stops and around user defined barriers using the OnlineLocatorTask.
            </summary>
            <title>Routing Around Barriers</title>
            <category>Tasks</category>
            <subcategory>Network Analyst</subcategory>
            <summary>
            RoutingWithBarriers
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.RoutingWithBarriers.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.RoutingWithDirections">
            <summary>
            Demonstrates retrieving a route and driving directions between input locations with OnlineLocatorTask.
            </summary>
            <title>Routing with Directions</title>
            <category>Tasks</category>
            <subcategory>Network Analyst</subcategory>
            <summary>
            RoutingWithDirections
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.RoutingWithDirections.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ExportTileCache">
            <summary>
            Demonstrates how to download a local tile cache from an online service with the ExportTiles operation enabled.
            </summary>
            <title>Export Tile Cache</title>
            <category>Offline</category>
            <summary>
            ExportTileCache
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExportTileCache.#ctor">
            <summary>Construct Export Tile Cache sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ExportTileCache.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GenerateGeodatabase">
            <summary>
            This sample demonstrates how to generate and download a local geodatabase from an online map service for later offline use.
            </summary>
            <title>Generate Geodatabase</title>
            <category>Offline</category>
            <summary>
            GenerateGeodatabase
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GenerateGeodatabase.#ctor">
            <summary>Construct Generate Geodatabase sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GenerateGeodatabase.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.OfflineGeocoding">
            <summary>
            Demonstrates performing a geocode by submitting values for multiple address fields to a local locator.
            </summary>
            <title>Geocoding</title>
            <category>Offline</category>
            <summary>
            OfflineGeocoding
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OfflineGeocoding.#ctor">
            <summary>Construct Offline Geocoding sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OfflineGeocoding.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.OfflineRouting">
            <summary>
            This sample demonstrates offline routing with a network analyst LocalRouteTask.
            </summary>
            <title>Routing</title>
            <category>Offline</category>
            <summary>
            OfflineRouting
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OfflineRouting.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SyncGeodatabase">
            <summary>
            This sample demonstrates how to synchronize a local geodatabase with an online service.
            </summary>
            <title>Sync Geodatabase</title>
            <category>Offline</category>
            <sampleType>Workflow</sampleType>
            <summary>
            SyncGeodatabase
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SyncGeodatabase.#ctor">
            <summary>Construct Generate Geodatabase sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SyncGeodatabase.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.BatchGeocoding">
            <summary>
            This sample shows how to perform batch geocoding using the ArcGIS Online World Geocoding service with an ArcGIS Online Organizational account.
            </summary>
            <title>Batch Geocoding</title>
            <category>ArcGIS Online Services</category>
            <summary>
            BatchGeocoding
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.BatchGeocoding.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SourceAddress">
            <summary>Source Address class with change notification for UI</summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.PortalSecurity">
            <summary>
            Security class that defines global challenge method for accessing arcgis.com portal services
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Traffic">
            <summary>
            This sample shows how to add the ArcGIS Traffic service to a map.
            </summary>
            <title>Traffic</title>
            <category>ArcGIS Online Services</category>
            <summary>
            Traffic
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Traffic.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.CreateWebMap">
            <summary>
            This sample shows how to create a new webmap from scratch by adding a BaseMap and OperationLayers. Here, a webmap object is created with a base map and operationlayers including an ArcGISDynamicMapService layer, a FeatureService with Popups and a FeatureCollection.
            </summary>
            <title>Create Web Map</title>
            <category>Portal</category>
            <summary>
            CreateWebMap
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreateWebMap.#ctor">
            <summary>Construct Create WebMap sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.CreateWebMap.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.LoadWebMap">
            <summary>
            This sample demonstrates adding data a WebMap from ArcGIS Online to an application.
            </summary>
            <title>Load WebMap</title>
            <category>Portal</category>
            <summary>
            LoadWebMap
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LoadWebMap.#ctor">
            <summary>Construct Load WebMap sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LoadWebMap.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.LoadWebMapMVVM">
            <summary>
            This sample demonstrates adding data a WebMap from ArcGIS Online to an application using the MVVM design pattern.
            </summary>
            <title>Load WebMap MVVM</title>
            <category>Portal</category>
            <summary>
            LoadWebMapMVVM
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LoadWebMapMVVM.#ctor">
            <summary>Construct Load WebMap sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LoadWebMapMVVM.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.PortalBasemaps">
            <summary>
            This sample demonstrates how to search for, return, and dynamically use basemaps from ArcGIS Online.
            </summary>
            <title>Basemaps</title>
            <category>Portal</category>
            <summary>
            PortalBasemaps
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.PortalBasemaps.#ctor">
            <summary>Construct Portal Basemaps sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.PortalBasemaps.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.PortalSearch">
            <summary>
            This sample shows how to use the Portal API to search for web maps on ArcGIS.com that match the search criteria.
            </summary>
            <title>Search</title>
            <category>Portal</category>
            <summary>
            PortalSearch
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.PortalSearch.#ctor">
            <summary>Construct Portal Search sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.PortalSearch.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ShowProperties">
            <summary>
            This sample illustrates a simple way of querying the Portal metadata/properties and retrieving featuredItems using the Portal API.
            </summary>
            <title>Show Properties</title>
            <category>Portal</category>
            <summary>
            ShowProperties
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ShowProperties.#ctor">
            <summary>Construct Show Portal Properties sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ShowProperties.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ClientPrinting">
            <summary>
            This sample demonstrates how to print a map using client-side capabilities of the PrintDialog class.
            </summary>
            <title>Client Printing</title>
            <category>Printing</category>
            <summary>
            ClientPrinting
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClientPrinting.#ctor">
            <summary>Construct Client Printing sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClientPrinting.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.PreviewSizes">
            <summary>Collection of PreviewSize (creatable in XAML)</summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.PreviewSize">
            <summary>Represents a Preview Size (creatable in XAML)</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.PreviewSize.Id">
            <summary>ID or Name of the preview size</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.PreviewSize.Width">
            <summary>Width of the preview size</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.PreviewSize.Height">
            <summary>Height of the preview size</summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ServerPrinting">
            <summary>
            This sample demonstrates printing a map using a PrintTask. To use the sample, specify the print settings (Layout Template and Format) using the dropdowns and click the Export Map button to generate a printout of the map. The printout will be displayed using the systems default browser.
            </summary>
            <title>Server Printing</title>
            <category>Printing</category>
            <summary>
            ServerPrinting
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ServerPrinting.#ctor">
            <summary>Construct Server Printing sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ServerPrinting.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.AttributeQuery">
            <summary>
            This sample demonstrates performing an attribute query, adding the results to the map and UI, and zooming to the resulting geometry. To use the sample, select a state from the drop-down menu. A QueryTask is used to query a map service layer based on the selected state name. The result is then added as a Graphic to the map and the attributes displayed in a list control.
            </summary>
            <title>Attribute Query</title>
            <category>Tasks</category>
            <subcategory>Query</subcategory>
            <summary>
            AttributeQuery
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AttributeQuery.#ctor">
            <summary>Construct Attribute Query sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.AttributeQuery.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.FindTaskSample">
            <summary>
            This sample demonstrates how to search your data using the find task. The sample displays the results on the map and in tabular list view.
            </summary>
            <title>Find</title>
            <category>Tasks</category>
            <subcategory>Query</subcategory>
            <summary>
            FindTaskSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FindTaskSample.#ctor">
            <summary>Construct Find sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.FindTaskSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.IdentifySample">
            <summary>
            This sample demonstrates performing identify operations. To use the sample, click anywhere in the United States to identify features. The results will be shown in the combo box and list view on the right side of the application. View the data for different results by selecting them from the combo box. In the code-behind, an IdentifyTask is used to perform the identify operation. The tasks IdentifyParameters specify to query the geometry of the map click and to query all the layers in the target map service, which enables returning results from multiple layers.
            </summary>
            <title>Identify</title>
            <category>Tasks</category>
            <subcategory>Query</subcategory>
            <summary>
            IdentifySample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.IdentifySample.#ctor">
            <summary>Construct Identify sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.IdentifySample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.QueryOnly">
            <summary>
            Demonstrates how to use a QueryTask to query a map service without a map.
            </summary>
            <title>Query Only</title>
            <category>Tasks</category>
            <subcategory>Query</subcategory>
            <summary>
            QueryOnly
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.QueryOnly.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.QueryRelatedTables">
            <summary>
            This sample demonstrates how to use a relationship query to display information from a related table for selected features. Clicking on the map highlight a set of wells near the clicked point. Select a well from the list to display related features (tops). The object id of the well is used in the relationship query to return 0 to many related records displayed in the list view. Note that the code requires a relationshipId. Feature layers can have more than one relationship and each relationship is identified by a unique identifier. You can use the Services Directory to find the relationship id.
            </summary>
            <title>Query Related Tables</title>
            <category>Tasks</category>
            <subcategory>Query</subcategory>
            <summary>
            QueryRelatedTables
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.QueryRelatedTables.#ctor">
            <summary>Construct Spatial Query sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.QueryRelatedTables.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SpatialQuery">
            <summary>
            This sample demonstrates how to spatially search your data using a QueryTask with its geometry attribute set. The sample spatially queries a map service using the buffer geometry around a user's click point and displays the results in a graphics layer on the map.
            </summary>
            <title>Spatial Query</title>
            <category>Tasks</category>
            <subcategory>Query</subcategory>
            <summary>
            SpatialQuery
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SpatialQuery.#ctor">
            <summary>Construct Spatial Query sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SpatialQuery.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Statistics">
            <summary>
            Demonstrates how to use a QueryTask to get statistics from a map service. A statistics query is executed against a US states map service that gets statistics about population in sub-regions. This is combined with another query that retrieves all state features and the result is added to a graphicslayer and a tabular list view.
            </summary>
            <title>Statistics</title>
            <category>Tasks</category>
            <subcategory>Query</subcategory>
            <summary>
            Statistics
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Statistics.#ctor">
            <summary>Construct Statistics sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Statistics.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SceneOverlay">
            <summary>
            Demonstrates how to use a scene overlay as a label
            </summary>
            <title>3D Scene Overlay as Label</title>
            <category>Scene</category>
            <subcategory>Graphics</subcategory>
            <summary>
            SceneOverlay
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SceneOverlay.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.OAuthAuthorizeHandler">
            <summary>
            Desktop OAuthAuthorize handler which encapsulates the redirection of the user to the OAuth authorization URI by using a WebBrowser.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OAuthAuthorizeHandler.AuthorizeAsync(System.String,System.String,System.String)">
            <summary>
            Redirects the user to the authorization URI by using a WebBrowser.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="authorizeUri">The authorize URI.</param>
            <param name="callbackUri">The callback URI.</param>
            <returns>Dictionary of parameters returned by the authorization URI (code, access_token, refresh_token, ...)</returns>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OAuthAuthorizeHandler.DecodeParameters(System.Uri)">
            <summary>
            Decodes the parameters returned when the user agent is redirected to the callback url
            The parameters can be returned as fragments (e.g. access_token for Browser based app) or as query parameter (e.g. code for Server based app)
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.TokenSecuredServices">
            <summary>
            This sample demonstrates how to use the IdentityManager to gain access to a secured service. Here, the map contains a public basemap and a secure dynamic layer. The IdentityManager will challenge for credentials when the Map tries to access a secure service.
            </summary>
            <title>ArcGIS Token Secured Services</title>
            <category>Security</category>
            <summary>
            TokenSecuredServices
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.TokenSecuredServices.#ctor">
            <summary>Construct Token Secured Services sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.TokenSecuredServices.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ClassBreaksRendererSample">
            <summary>
            Sample shows how to create a ClassBreaksRenderer for a graphics layer. USA cities data points are pulled from an online source and rendered using the GraphicsLayer ClassBreaksRenderer.
            </summary>
            <title>Class Breaks Renderer</title>
            <category>Symbology</category>
            <summary>
            ClassBreaksRendererSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClassBreaksRendererSample.#ctor">
            <summary>Construct Class Breaks Renderer sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ClassBreaksRendererSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.GenerateRenderer">
            <summary>
            This sample uses an ArcGIS Server Task to generate a Class Breaks Renderer with five classes. Note that this functionality requires an ArcGIS Server 10.1 instance. The generate renderer task can also generate unique value renderers and can also generate color ramp(s) from two or more colors.
            </summary>
            <title>Generate Renderer Task</title>
            <category>Symbology</category>
            <summary>
            GenerateRenderer
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GenerateRenderer.#ctor">
            <summary>Construct Generate Renderer sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.GenerateRenderer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57CellInfoSample">
            <summary>
            This sample demonstrates adding and removing S-57 cells from an HydrographicS57Layer in the Map and accessing the Dataset Identification (DSID) metadata of those S-57 cells. The DSID metadata Provides information regarding the dataset's source and the product specification it is part of.
            </summary>
            <title>S57 Cell Information</title>
            <category>Symbology</category>
            <subcategory>Hydrographic</subcategory>
            <requiresSymbols>true</requiresSymbols>
            <summary>
            S57CellInfoSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57CellInfoSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57DisplayPropertiesSample">
            <summary>
            This sample demonstrates using the global static HydrographicS52DisplayProperties object to control the display properties of an HydrographicS57Layer, such as the Color Scheme or Safety Contour Depth. 
            </summary>
            <title>S57 Display Properties</title>
            <category>Symbology</category>
            <subcategory>Hydrographic</subcategory>
            <requiresSymbols>true</requiresSymbols>
            <summary>
            S57DisplayPropertiesSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57DisplayPropertiesSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57IdentifySample">
            <summary>
            This sample demonstrates how to perform a point-based identify style operation on an HydrographicS57Layer using the SearchLayer method.
            </summary>
            <title>S57 Identify</title>
            <category>Symbology</category>
            <subcategory>Hydrographic</subcategory>
            <requiresSymbols>true</requiresSymbols>
            <summary>
            S57IdentifySample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57IdentifySample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57SearchSample">
            <summary>
            This sample shows how to use the SearchAsync method to search an HydrographicS57Layer based on an input geometry, buffer value and object name.
            </summary>
            <title>S57 Search </title>
            <category>Symbology</category>
            <subcategory>Hydrographic</subcategory>
            <requiresSymbols>true</requiresSymbols>
            <summary>
            S57SearchSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Symbology.Hydrographic.S57SearchSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.LineFillSymbols">
            <summary>
            Sample shows how to create Line and Fill Symbol (SimpleLineSymbol, SimpleFillSymbol, PictureFillSymbol) and add graphics using the symbols.
            </summary>
            <title>Line and Fill Symbols</title>
            <category>Symbology</category>
            <summary>
            LineFillSymbols
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LineFillSymbols.#ctor">
            <summary>Construct Line and Fill Symbols sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.LineFillSymbols.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SampleSymbol">
            <summary>Local symbol class</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SampleSymbol.#ctor(Esri.ArcGISRuntime.Symbology.Symbol,System.String)">
            <summary>Construct sample symbol object</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.SampleSymbol.Symbol">
            <summary>Symbol</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.SampleSymbol.SymbolUri">
            <summary>Uri for picture symbols</summary>
        </member>
        <member name="P:ArcGISRuntime.Samples.Desktop.SampleSymbol.Swatch">
            <summary>Swatch for UI</summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.MarkerSymbols">
            <summary>
            Sample shows how to create MarkerySymbols (both SimpleMarkerSymbol and PictureMarkerSymbol) and add point graphics using the symbols.
            </summary>
            <title>Marker Symbols</title>
            <category>Symbology</category>
            <summary>
            MarkerSymbols
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MarkerSymbols.#ctor">
            <summary>Construct Marker Symbols sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.MarkerSymbols.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SimpleRendererSample">
            <summary>
            Sample shows how to create a SimpleRenderer for a graphics layer in XAML and code. User added points will be added to the graphics layer and rendered using the GraphicsLayer Renderer.
            </summary>
            <title>Simple Renderer</title>
            <category>Symbology</category>
            <summary>
            SimpleRendererSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SimpleRendererSample.#ctor">
            <summary>Construct Simple Renderer sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SimpleRendererSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Symbology.Specialized.MessageProcessingSample">
            <summary>
            Sample shows how to read and process Mil2525C message data from XML file. 
            </summary>
            <title>Message Processor</title>
            <category>Symbology</category>
            <subcategory>Specialized</subcategory>
            <summary>
            MessageProcessingSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Symbology.Specialized.MessageProcessingSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.Symbology.Specialized.SymbolDictionarySearchSample">
            <summary>
            Sample shows how to use search the Mil2525C symbol dictionary.
            </summary>
            <title>Symbol Dictionary Search</title>
            <category>Symbology</category>
            <subcategory>Specialized</subcategory>
            <requiresSymbols>true</requiresSymbols>
            <summary>
            SymbolDictionarySearchSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.Symbology.Specialized.SymbolDictionarySearchSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SymbolsAndLabels">
            <summary>
            Shows various types of the more advanced symbol types: Composite and CIM symbology.
            </summary>
            <title>Symbols and Labels</title>
            <category>Symbology</category>
            <summary>
            SymbolsAndLabels
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SymbolsAndLabels.CreateGeometries">
            <summary>
            XAML creation of polygon and polyline geometries are currently not supported, so
            here they are created in code. Points are generated in the XAML for this sample.
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SymbolsAndLabels.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.TextSymbols">
            <summary>
            Sample shows how to create Text Symbols (TextSymbol) and add graphics using the symbols.
            </summary>
            <title>Text Symbols</title>
            <category>Symbology</category>
            <summary>
            TextSymbols
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.TextSymbols.#ctor">
            <summary>Construct Text Symbols sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.TextSymbols.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.UniqueValueRendererSample">
            <summary>
            Sample shows how to create a UniqueValueRenderer for a graphics layer. US state polygons are pulled from an online source and rendered using the GraphicsLayer UniqueValueRenderer.
            </summary>
            <title>Unique Value Renderer</title>
            <category>Symbology</category>
            <summary>
            UniqueValueRendererSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.UniqueValueRendererSample.#ctor">
            <summary>Construct Unique Value Renderer sample control</summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.UniqueValueRendererSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ArcGISLocalTiledLayerSample">
            <summary>
            Demonstrates adding a local tiled layer from a tile package (.tpk) to a Map in XAML.
            </summary>
            <title>ArcGIS Local Tiled Layer</title>
            <category>Layers</category>
            <subcategory>Tiled Layers</subcategory>
            <summary>
            ArcGISLocalTiledLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISLocalTiledLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.ArcGISTiledMapServiceLayerSample">
            <summary>
            Demonstrates adding an ArcGIS tiled map service to a Map in XAML.
            </summary>
            <title>ArcGIS Tiled Map Service Layer</title>
            <category>Layers</category>
            <subcategory>Tiled Layers</subcategory>
            <summary>
            ArcGISTiledMapServiceLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.ArcGISTiledMapServiceLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.BingLayerSample">
            <summary>
            Demonstrates adding a Bing Maps layer to a Map in code.  A Bing Maps key must be provided to view Bing Maps tiled map services.
            </summary>
            <title>Bing Maps Layer</title>
            <category>Layers</category>
            <subcategory>Tiled Layers</subcategory>
            <summary>
            BingLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.BingLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.OpenStreetMapLayerSample">
            <summary>
            Demonstrates adding an Open StreetMap layer to a Map in XAML.
            </summary>
            <title>Open StreetMap Layer</title>
            <category>Layers</category>
            <subcategory>Tiled Layers</subcategory>
            <summary>
            OpenStreetMapLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.OpenStreetMapLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.WebTiledLayerSample">
            <summary>
            Demonstrates adding a Web tiled layer to a Map in XAML, and changing layer properties in code behind.
            Also demonstrates including Attribution as per Terms of Use for the various layers. 
            </summary>
            <title>Web Tiled Layer</title>
            <category>Layers</category>
            <subcategory>Tiled Layers</subcategory>
            <summary>
            WebTiledLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.WebTiledLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.WmtsLayerSample">
            <summary>
            Demonstrates adding a WMTS layer to a Map in XAML.
            </summary>
            <title>WMTS Layer</title>
            <category>Layers</category>
            <subcategory>Tiled Layers</subcategory>
            <summary>
            WmtsLayerSample
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.WmtsLayerSample.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SetSunTime">
            <summary>
            Demonstrates how to use use the sun mode
            </summary>
            <title>3D Set Sun Time</title>
            <category>Scene</category>
            <subcategory>Mapping</subcategory>
            <summary>
            SetSunTime
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SetSunTime.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGISRuntime.Samples.Desktop.SymbolRotation3d">
            <summary>
            Demonstrates how to rotate 3d symbols
            </summary>
            <title>3D Symbol Rotation</title>
            <category>Scene</category>
            <subcategory>Symbology</subcategory>
            <summary>
            SymbolRotation3d
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SymbolRotation3d.OnHeadingSliderChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Change the Heading of the graphics based on the slider values (0-360).
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SymbolRotation3d.OnPitchSliderChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Change the Pitch of the graphics based on the slider values (0-360)
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SymbolRotation3d.OnRollSliderChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Change the Roll of the graphics based on the slider values (0-360)
            </summary>
        </member>
        <member name="M:ArcGISRuntime.Samples.Desktop.SymbolRotation3d.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
